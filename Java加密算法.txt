我所查到的大致有三种：MD5、RSA、DES（对于算法的理解与实现没有太过深入）
1、MD5：大致原理是这样的，将任意长度的“字节串”（这里可以想象成一个文件）变换成一个128bit的大整数，并且他是一个不可逆的字符串变换算法，一定程度上只要通过这个加密很难知道原始的字符串，具体什么原因我也不太明白，大致看了一下如何实现的，一定程度上进行分组处理，在组中进行填字符，再进行循环之类的操作，看了一圈真心不是太懂。
  所查的资料所显示的一个应用场景：对一段Message(字节串)产生fingerprint(指纹)，以防止被“篡改”。举个例子，你将一段话写在一个叫 readme.txt文件中，并对这个readme.txt产生一个MD5的值并记录在案，然后你可以传播这个文件给别人，别人如果修改了文件中的任何内容，你对这个文件重新计算MD5时就会发现。如果再有一个第三方的认证机构，用MD5还可以防止文件作者的“抵赖”，这就是所谓的数字签名应用。
    MD5还广泛用于加密和解密技术上，在很多操作系统中，用户的密码是以MD5值（或类似的其它算法）的方式保存的， 用户Login的时候，系统是把用户输入的密码计算成MD5值，然后再去和系统中保存的MD5值进行比较，而系统并不“知道”用户的密码是什么。

2、DES：DES算法的入口参数有三个：Key、Data、Mode。其中Key为8个字节共64位，是DES算法的工作密钥；Data也为8个字节64位，是要被加密或被解密的数据；Mode为DES的工作方式，有两种：加密或解密。 
　　DES算法是这样工作的：如Mode为加密，则用Key 去把数据Data进行加密， 生成Data的密码形式（64位）作为DES的输出结果；如Mode为解密，则用Key去把密码形式的数据Data解密，还原为Data的明码形式（64位）作为DES的输出结果。在通信网络的两端，双方约定一致的Key，在通信的源点用Key对核心数据进行DES加密，然后以密码形式在公共通信网（如电话网）中传输到通信网络的终点，数据到达目的地后，用同样的Key对密码数据进行解密，便再现了明码形式的核心数据。这样，便保证了核心数据（如PIN、MAC等）在公共通信网中传输的安全性和可靠性。 
     这段话是从网上截取的一段，大致讲明白了DES的组成，以及大致的流程。原理呢？同样它必须分组。我想一定程度上分组会产生一定的复杂性。其中主要的形式就是进行组内的元素进行互换，在位置上发生变化，你想破译，你必须要知道互换的原则是什么。

3、RSA：此种算法在结构上比较简单，似乎有一个固定的指数公式，具体的也不太清楚。